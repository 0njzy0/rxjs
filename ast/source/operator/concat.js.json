{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "isScheduler",
            "range": [
              9,
              20
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 20
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "isScheduler",
            "range": [
              9,
              20
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 20
              }
            }
          },
          "range": [
            9,
            20
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 20
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../util/isScheduler",
        "raw": "'../util/isScheduler'",
        "range": [
          28,
          49
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 28
          },
          "end": {
            "line": 1,
            "column": 49
          }
        }
      },
      "range": [
        0,
        50
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 50
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "ArrayObservable",
            "range": [
              60,
              75
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 24
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "ArrayObservable",
            "range": [
              60,
              75
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 24
              }
            }
          },
          "range": [
            60,
            75
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 24
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../observable/fromArray",
        "raw": "'../observable/fromArray'",
        "range": [
          83,
          108
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 32
          },
          "end": {
            "line": 2,
            "column": 57
          }
        }
      },
      "range": [
        51,
        109
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 58
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "MergeAllOperator",
            "range": [
              119,
              135
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 25
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "MergeAllOperator",
            "range": [
              119,
              135
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 25
              }
            }
          },
          "range": [
            119,
            135
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 9
            },
            "end": {
              "line": 3,
              "column": 25
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./mergeAll-support",
        "raw": "'./mergeAll-support'",
        "range": [
          143,
          163
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 33
          },
          "end": {
            "line": 3,
            "column": 53
          }
        }
      },
      "range": [
        110,
        164
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 54
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Joins this observable with multiple other observables by subscribing to them one at a time, starting with the source,\n * and merging their results into the returned observable. Will wait for each observable to complete before moving\n * on to the next.\n * @params {...Observable} the observables to concatenate\n * @params {Scheduler} [scheduler] an optional scheduler to schedule each observable subscription on.\n * @returns {Observable} All values of each passed observable merged into a single observable, in order, in serial fashion.\n ",
          "range": [
            165,
            711
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "concat",
          "range": [
            728,
            734
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 16
            },
            "end": {
              "line": 12,
              "column": 22
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "observables",
              "range": [
                738,
                749
              ],
              "loc": {
                "start": {
                  "line": 12,
                  "column": 26
                },
                "end": {
                  "line": 12,
                  "column": 37
                }
              }
            },
            "range": [
              735,
              749
            ],
            "loc": {
              "start": {
                "line": 12,
                "column": 23
              },
              "end": {
                "line": 12,
                "column": 37
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "args",
                    "range": [
                      761,
                      765
                    ],
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 8
                      },
                      "end": {
                        "line": 13,
                        "column": 12
                      }
                    }
                  },
                  "init": {
                    "type": "Identifier",
                    "name": "observables",
                    "range": [
                      768,
                      779
                    ],
                    "loc": {
                      "start": {
                        "line": 13,
                        "column": 15
                      },
                      "end": {
                        "line": 13,
                        "column": 26
                      }
                    }
                  },
                  "range": [
                    761,
                    779
                  ],
                  "loc": {
                    "start": {
                      "line": 13,
                      "column": 8
                    },
                    "end": {
                      "line": 13,
                      "column": 26
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                757,
                780
              ],
              "loc": {
                "start": {
                  "line": 13,
                  "column": 4
                },
                "end": {
                  "line": 13,
                  "column": 27
                }
              }
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "args",
                    "range": [
                      785,
                      789
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 4
                      },
                      "end": {
                        "line": 14,
                        "column": 8
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "unshift",
                    "range": [
                      790,
                      797
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 9
                      },
                      "end": {
                        "line": 14,
                        "column": 16
                      }
                    }
                  },
                  "range": [
                    785,
                    797
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 4
                    },
                    "end": {
                      "line": 14,
                      "column": 16
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ThisExpression",
                    "range": [
                      798,
                      802
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 17
                      },
                      "end": {
                        "line": 14,
                        "column": 21
                      }
                    }
                  }
                ],
                "range": [
                  785,
                  803
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 4
                  },
                  "end": {
                    "line": 14,
                    "column": 22
                  }
                }
              },
              "range": [
                785,
                804
              ],
              "loc": {
                "start": {
                  "line": 14,
                  "column": 4
                },
                "end": {
                  "line": 14,
                  "column": 23
                }
              }
            },
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "scheduler",
                    "range": [
                      813,
                      822
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 8
                      },
                      "end": {
                        "line": 15,
                        "column": 17
                      }
                    }
                  },
                  "init": {
                    "type": "Literal",
                    "value": null,
                    "raw": "null",
                    "range": [
                      825,
                      829
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 20
                      },
                      "end": {
                        "line": 15,
                        "column": 24
                      }
                    }
                  },
                  "range": [
                    813,
                    829
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 8
                    },
                    "end": {
                      "line": 15,
                      "column": 24
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                809,
                830
              ],
              "loc": {
                "start": {
                  "line": 15,
                  "column": 4
                },
                "end": {
                  "line": 15,
                  "column": 25
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "isScheduler",
                  "range": [
                    839,
                    850
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 8
                    },
                    "end": {
                      "line": 16,
                      "column": 19
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "args",
                      "range": [
                        851,
                        855
                      ],
                      "loc": {
                        "start": {
                          "line": 16,
                          "column": 20
                        },
                        "end": {
                          "line": 16,
                          "column": 24
                        }
                      }
                    },
                    "property": {
                      "type": "BinaryExpression",
                      "operator": "-",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "args",
                          "range": [
                            856,
                            860
                          ],
                          "loc": {
                            "start": {
                              "line": 16,
                              "column": 25
                            },
                            "end": {
                              "line": 16,
                              "column": 29
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length",
                          "range": [
                            861,
                            867
                          ],
                          "loc": {
                            "start": {
                              "line": 16,
                              "column": 30
                            },
                            "end": {
                              "line": 16,
                              "column": 36
                            }
                          }
                        },
                        "range": [
                          856,
                          867
                        ],
                        "loc": {
                          "start": {
                            "line": 16,
                            "column": 25
                          },
                          "end": {
                            "line": 16,
                            "column": 36
                          }
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "range": [
                          870,
                          871
                        ],
                        "loc": {
                          "start": {
                            "line": 16,
                            "column": 39
                          },
                          "end": {
                            "line": 16,
                            "column": 40
                          }
                        }
                      },
                      "range": [
                        856,
                        871
                      ],
                      "loc": {
                        "start": {
                          "line": 16,
                          "column": 25
                        },
                        "end": {
                          "line": 16,
                          "column": 40
                        }
                      }
                    },
                    "range": [
                      851,
                      872
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 20
                      },
                      "end": {
                        "line": 16,
                        "column": 41
                      }
                    }
                  }
                ],
                "range": [
                  839,
                  873
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 8
                  },
                  "end": {
                    "line": 16,
                    "column": 42
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "scheduler",
                        "range": [
                          885,
                          894
                        ],
                        "loc": {
                          "start": {
                            "line": 17,
                            "column": 8
                          },
                          "end": {
                            "line": 17,
                            "column": 17
                          }
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "args",
                            "range": [
                              897,
                              901
                            ],
                            "loc": {
                              "start": {
                                "line": 17,
                                "column": 20
                              },
                              "end": {
                                "line": 17,
                                "column": 24
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "pop",
                            "range": [
                              902,
                              905
                            ],
                            "loc": {
                              "start": {
                                "line": 17,
                                "column": 25
                              },
                              "end": {
                                "line": 17,
                                "column": 28
                              }
                            }
                          },
                          "range": [
                            897,
                            905
                          ],
                          "loc": {
                            "start": {
                              "line": 17,
                              "column": 20
                            },
                            "end": {
                              "line": 17,
                              "column": 28
                            }
                          }
                        },
                        "arguments": [],
                        "range": [
                          897,
                          907
                        ],
                        "loc": {
                          "start": {
                            "line": 17,
                            "column": 20
                          },
                          "end": {
                            "line": 17,
                            "column": 30
                          }
                        }
                      },
                      "range": [
                        885,
                        907
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 8
                        },
                        "end": {
                          "line": 17,
                          "column": 30
                        }
                      }
                    },
                    "range": [
                      885,
                      908
                    ],
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 8
                      },
                      "end": {
                        "line": 17,
                        "column": 31
                      }
                    }
                  }
                ],
                "range": [
                  875,
                  914
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 44
                  },
                  "end": {
                    "line": 18,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                835,
                914
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 4
                },
                "end": {
                  "line": 18,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ArrayObservable",
                      "range": [
                        930,
                        945
                      ],
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 15
                        },
                        "end": {
                          "line": 19,
                          "column": 30
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "args",
                        "range": [
                          946,
                          950
                        ],
                        "loc": {
                          "start": {
                            "line": 19,
                            "column": 31
                          },
                          "end": {
                            "line": 19,
                            "column": 35
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "scheduler",
                        "range": [
                          952,
                          961
                        ],
                        "loc": {
                          "start": {
                            "line": 19,
                            "column": 37
                          },
                          "end": {
                            "line": 19,
                            "column": 46
                          }
                        }
                      }
                    ],
                    "range": [
                      926,
                      962
                    ],
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 11
                      },
                      "end": {
                        "line": 19,
                        "column": 47
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "lift",
                    "range": [
                      963,
                      967
                    ],
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 48
                      },
                      "end": {
                        "line": 19,
                        "column": 52
                      }
                    }
                  },
                  "range": [
                    926,
                    967
                  ],
                  "loc": {
                    "start": {
                      "line": 19,
                      "column": 11
                    },
                    "end": {
                      "line": 19,
                      "column": 52
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "MergeAllOperator",
                      "range": [
                        972,
                        988
                      ],
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 57
                        },
                        "end": {
                          "line": 19,
                          "column": 73
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "range": [
                          989,
                          990
                        ],
                        "loc": {
                          "start": {
                            "line": 19,
                            "column": 74
                          },
                          "end": {
                            "line": 19,
                            "column": 75
                          }
                        }
                      }
                    ],
                    "range": [
                      968,
                      991
                    ],
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 53
                      },
                      "end": {
                        "line": 19,
                        "column": 76
                      }
                    }
                  }
                ],
                "range": [
                  926,
                  992
                ],
                "loc": {
                  "start": {
                    "line": 19,
                    "column": 11
                  },
                  "end": {
                    "line": 19,
                    "column": 77
                  }
                }
              },
              "range": [
                919,
                993
              ],
              "loc": {
                "start": {
                  "line": 19,
                  "column": 4
                },
                "end": {
                  "line": 19,
                  "column": 78
                }
              }
            }
          ],
          "range": [
            751,
            995
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 39
            },
            "end": {
              "line": 20,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          719,
          995
        ],
        "loc": {
          "start": {
            "line": 12,
            "column": 7
          },
          "end": {
            "line": 20,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Joins this observable with multiple other observables by subscribing to them one at a time, starting with the source,\n * and merging their results into the returned observable. Will wait for each observable to complete before moving\n * on to the next.\n * @params {...Observable} the observables to concatenate\n * @params {Scheduler} [scheduler] an optional scheduler to schedule each observable subscription on.\n * @returns {Observable} All values of each passed observable merged into a single observable, in order, in serial fashion.\n ",
            "range": [
              165,
              711
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 11,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=concat.js.map",
            "range": [
              996,
              1030
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 34
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        712,
        995
      ],
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Joins this observable with multiple other observables by subscribing to them one at a time, starting with the source,\n * and merging their results into the returned observable. Will wait for each observable to complete before moving\n * on to the next.\n * @params {...Observable} the observables to concatenate\n * @params {Scheduler} [scheduler] an optional scheduler to schedule each observable subscription on.\n * @returns {Observable} All values of each passed observable merged into a single observable, in order, in serial fashion.\n ",
          "range": [
            165,
            711
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=concat.js.map",
          "range": [
            996,
            1030
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 34
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    995
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 20,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Joins this observable with multiple other observables by subscribing to them one at a time, starting with the source,\n * and merging their results into the returned observable. Will wait for each observable to complete before moving\n * on to the next.\n * @params {...Observable} the observables to concatenate\n * @params {Scheduler} [scheduler] an optional scheduler to schedule each observable subscription on.\n * @returns {Observable} All values of each passed observable merged into a single observable, in order, in serial fashion.\n ",
      "range": [
        165,
        711
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=concat.js.map",
      "range": [
        996,
        1030
      ],
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 34
        }
      }
    }
  ]
}