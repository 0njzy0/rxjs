{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Subscriber",
            "range": [
              9,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Subscriber",
            "range": [
              9,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            9,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../Subscriber",
        "raw": "'../Subscriber'",
        "range": [
          27,
          42
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 27
          },
          "end": {
            "line": 1,
            "column": 42
          }
        }
      },
      "range": [
        0,
        43
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 43
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n ",
          "range": [
            44,
            1542
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "dematerialize",
          "range": [
            1559,
            1572
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 16
            },
            "end": {
              "line": 37,
              "column": 29
            }
          }
        },
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression",
                    "range": [
                      1588,
                      1592
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 11
                      },
                      "end": {
                        "line": 38,
                        "column": 15
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "lift",
                    "range": [
                      1593,
                      1597
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 16
                      },
                      "end": {
                        "line": 38,
                        "column": 20
                      }
                    }
                  },
                  "range": [
                    1588,
                    1597
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 11
                    },
                    "end": {
                      "line": 38,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "DeMaterializeOperator",
                      "range": [
                        1602,
                        1623
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 25
                        },
                        "end": {
                          "line": 38,
                          "column": 46
                        }
                      }
                    },
                    "arguments": [],
                    "range": [
                      1598,
                      1625
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 21
                      },
                      "end": {
                        "line": 38,
                        "column": 48
                      }
                    }
                  }
                ],
                "range": [
                  1588,
                  1626
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 11
                  },
                  "end": {
                    "line": 38,
                    "column": 49
                  }
                }
              },
              "range": [
                1581,
                1627
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 4
                },
                "end": {
                  "line": 38,
                  "column": 50
                }
              }
            }
          ],
          "range": [
            1575,
            1629
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 32
            },
            "end": {
              "line": 39,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1550,
          1629
        ],
        "loc": {
          "start": {
            "line": 37,
            "column": 7
          },
          "end": {
            "line": 39,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n ",
            "range": [
              44,
              1542
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 36,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        1543,
        1629
      ],
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n ",
          "range": [
            44,
            1542
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "DeMaterializeOperator",
        "range": [
          1636,
          1657
        ],
        "loc": {
          "start": {
            "line": 40,
            "column": 6
          },
          "end": {
            "line": 40,
            "column": 27
          }
        }
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "call",
              "range": [
                1664,
                1668
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 41,
                  "column": 8
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "subscriber",
                  "range": [
                    1669,
                    1679
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 9
                    },
                    "end": {
                      "line": 41,
                      "column": 19
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "source",
                  "range": [
                    1681,
                    1687
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 21
                    },
                    "end": {
                      "line": 41,
                      "column": 27
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "source",
                          "range": [
                            1706,
                            1712
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 15
                            },
                            "end": {
                              "line": 42,
                              "column": 21
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_subscribe",
                          "range": [
                            1713,
                            1723
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 22
                            },
                            "end": {
                              "line": 42,
                              "column": 32
                            }
                          }
                        },
                        "range": [
                          1706,
                          1723
                        ],
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 15
                          },
                          "end": {
                            "line": 42,
                            "column": 32
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "DeMaterializeSubscriber",
                            "range": [
                              1728,
                              1751
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 37
                              },
                              "end": {
                                "line": 42,
                                "column": 60
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "subscriber",
                              "range": [
                                1752,
                                1762
                              ],
                              "loc": {
                                "start": {
                                  "line": 42,
                                  "column": 61
                                },
                                "end": {
                                  "line": 42,
                                  "column": 71
                                }
                              }
                            }
                          ],
                          "range": [
                            1724,
                            1763
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 33
                            },
                            "end": {
                              "line": 42,
                              "column": 72
                            }
                          }
                        }
                      ],
                      "range": [
                        1706,
                        1764
                      ],
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 15
                        },
                        "end": {
                          "line": 42,
                          "column": 73
                        }
                      }
                    },
                    "range": [
                      1699,
                      1765
                    ],
                    "loc": {
                      "start": {
                        "line": 42,
                        "column": 8
                      },
                      "end": {
                        "line": 42,
                        "column": 74
                      }
                    }
                  }
                ],
                "range": [
                  1689,
                  1771
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 29
                  },
                  "end": {
                    "line": 43,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1668,
                1771
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 8
                },
                "end": {
                  "line": 43,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              1664,
              1771
            ],
            "loc": {
              "start": {
                "line": 41,
                "column": 4
              },
              "end": {
                "line": 43,
                "column": 5
              }
            },
            "static": false
          }
        ],
        "range": [
          1658,
          1773
        ],
        "loc": {
          "start": {
            "line": 40,
            "column": 28
          },
          "end": {
            "line": 44,
            "column": 1
          }
        }
      },
      "range": [
        1630,
        1773
      ],
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 1
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n ",
          "range": [
            1774,
            1865
          ],
          "loc": {
            "start": {
              "line": 45,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "DeMaterializeSubscriber",
        "range": [
          1872,
          1895
        ],
        "loc": {
          "start": {
            "line": 50,
            "column": 6
          },
          "end": {
            "line": 50,
            "column": 29
          }
        }
      },
      "superClass": {
        "type": "Identifier",
        "name": "Subscriber",
        "range": [
          1904,
          1914
        ],
        "loc": {
          "start": {
            "line": 50,
            "column": 38
          },
          "end": {
            "line": 50,
            "column": 48
          }
        }
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "constructor",
              "range": [
                1921,
                1932
              ],
              "loc": {
                "start": {
                  "line": 51,
                  "column": 4
                },
                "end": {
                  "line": 51,
                  "column": 15
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "destination",
                  "range": [
                    1933,
                    1944
                  ],
                  "loc": {
                    "start": {
                      "line": 51,
                      "column": 16
                    },
                    "end": {
                      "line": 51,
                      "column": 27
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Super",
                        "range": [
                          1956,
                          1961
                        ],
                        "loc": {
                          "start": {
                            "line": 52,
                            "column": 8
                          },
                          "end": {
                            "line": 52,
                            "column": 13
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "destination",
                          "range": [
                            1962,
                            1973
                          ],
                          "loc": {
                            "start": {
                              "line": 52,
                              "column": 14
                            },
                            "end": {
                              "line": 52,
                              "column": 25
                            }
                          }
                        }
                      ],
                      "range": [
                        1956,
                        1974
                      ],
                      "loc": {
                        "start": {
                          "line": 52,
                          "column": 8
                        },
                        "end": {
                          "line": 52,
                          "column": 26
                        }
                      }
                    },
                    "range": [
                      1956,
                      1975
                    ],
                    "loc": {
                      "start": {
                        "line": 52,
                        "column": 8
                      },
                      "end": {
                        "line": 52,
                        "column": 27
                      }
                    }
                  }
                ],
                "range": [
                  1946,
                  1981
                ],
                "loc": {
                  "start": {
                    "line": 51,
                    "column": 29
                  },
                  "end": {
                    "line": 53,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1932,
                1981
              ],
              "loc": {
                "start": {
                  "line": 51,
                  "column": 15
                },
                "end": {
                  "line": 53,
                  "column": 5
                }
              }
            },
            "kind": "constructor",
            "computed": false,
            "range": [
              1921,
              1981
            ],
            "loc": {
              "start": {
                "line": 51,
                "column": 4
              },
              "end": {
                "line": 53,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "_next",
              "range": [
                1986,
                1991
              ],
              "loc": {
                "start": {
                  "line": 54,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 9
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1992,
                    1997
                  ],
                  "loc": {
                    "start": {
                      "line": 54,
                      "column": 10
                    },
                    "end": {
                      "line": 54,
                      "column": 15
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "value",
                          "range": [
                            2009,
                            2014
                          ],
                          "loc": {
                            "start": {
                              "line": 55,
                              "column": 8
                            },
                            "end": {
                              "line": 55,
                              "column": 13
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "observe",
                          "range": [
                            2015,
                            2022
                          ],
                          "loc": {
                            "start": {
                              "line": 55,
                              "column": 14
                            },
                            "end": {
                              "line": 55,
                              "column": 21
                            }
                          }
                        },
                        "range": [
                          2009,
                          2022
                        ],
                        "loc": {
                          "start": {
                            "line": 55,
                            "column": 8
                          },
                          "end": {
                            "line": 55,
                            "column": 21
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              2023,
                              2027
                            ],
                            "loc": {
                              "start": {
                                "line": 55,
                                "column": 22
                              },
                              "end": {
                                "line": 55,
                                "column": 26
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "destination",
                            "range": [
                              2028,
                              2039
                            ],
                            "loc": {
                              "start": {
                                "line": 55,
                                "column": 27
                              },
                              "end": {
                                "line": 55,
                                "column": 38
                              }
                            }
                          },
                          "range": [
                            2023,
                            2039
                          ],
                          "loc": {
                            "start": {
                              "line": 55,
                              "column": 22
                            },
                            "end": {
                              "line": 55,
                              "column": 38
                            }
                          }
                        }
                      ],
                      "range": [
                        2009,
                        2040
                      ],
                      "loc": {
                        "start": {
                          "line": 55,
                          "column": 8
                        },
                        "end": {
                          "line": 55,
                          "column": 39
                        }
                      }
                    },
                    "range": [
                      2009,
                      2041
                    ],
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 8
                      },
                      "end": {
                        "line": 55,
                        "column": 40
                      }
                    }
                  }
                ],
                "range": [
                  1999,
                  2047
                ],
                "loc": {
                  "start": {
                    "line": 54,
                    "column": 17
                  },
                  "end": {
                    "line": 56,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1991,
                2047
              ],
              "loc": {
                "start": {
                  "line": 54,
                  "column": 9
                },
                "end": {
                  "line": 56,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              1986,
              2047
            ],
            "loc": {
              "start": {
                "line": 54,
                "column": 4
              },
              "end": {
                "line": 56,
                "column": 5
              }
            },
            "static": false
          }
        ],
        "range": [
          1915,
          2049
        ],
        "loc": {
          "start": {
            "line": 50,
            "column": 49
          },
          "end": {
            "line": 57,
            "column": 1
          }
        }
      },
      "range": [
        1866,
        2049
      ],
      "loc": {
        "start": {
          "line": 50,
          "column": 0
        },
        "end": {
          "line": 57,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n ",
          "range": [
            1774,
            1865
          ],
          "loc": {
            "start": {
              "line": 45,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=dematerialize.js.map",
          "range": [
            2050,
            2091
          ],
          "loc": {
            "start": {
              "line": 58,
              "column": 0
            },
            "end": {
              "line": 58,
              "column": 41
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    2049
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 57,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n ",
      "range": [
        44,
        1542
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n ",
      "range": [
        1774,
        1865
      ],
      "loc": {
        "start": {
          "line": 45,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=dematerialize.js.map",
      "range": [
        2050,
        2091
      ],
      "loc": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 41
        }
      }
    }
  ]
}