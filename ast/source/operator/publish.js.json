{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Subject",
            "range": [
              9,
              16
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 16
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Subject",
            "range": [
              9,
              16
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 16
              }
            }
          },
          "range": [
            9,
            16
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 16
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../Subject",
        "raw": "'../Subject'",
        "range": [
          24,
          36
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 24
          },
          "end": {
            "line": 1,
            "column": 36
          }
        }
      },
      "range": [
        0,
        37
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 37
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "multicast",
            "range": [
              47,
              56
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 18
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "multicast",
            "range": [
              47,
              56
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 18
              }
            }
          },
          "range": [
            47,
            56
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 18
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./multicast",
        "raw": "'./multicast'",
        "range": [
          64,
          77
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 26
          },
          "end": {
            "line": 2,
            "column": 39
          }
        }
      },
      "range": [
        38,
        78
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 40
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,\n * without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n ",
          "range": [
            79,
            795
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "publish",
          "range": [
            812,
            819
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 16
            },
            "end": {
              "line": 16,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "selector",
            "range": [
              820,
              828
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 24
              },
              "end": {
                "line": 16,
                "column": 32
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Identifier",
                  "name": "selector",
                  "range": [
                    843,
                    851
                  ],
                  "loc": {
                    "start": {
                      "line": 17,
                      "column": 11
                    },
                    "end": {
                      "line": 17,
                      "column": 19
                    }
                  }
                },
                "consequent": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "multicast",
                      "range": [
                        854,
                        863
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 22
                        },
                        "end": {
                          "line": 17,
                          "column": 31
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "call",
                      "range": [
                        864,
                        868
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 32
                        },
                        "end": {
                          "line": 17,
                          "column": 36
                        }
                      }
                    },
                    "range": [
                      854,
                      868
                    ],
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 22
                      },
                      "end": {
                        "line": 17,
                        "column": 36
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "ThisExpression",
                      "range": [
                        869,
                        873
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 37
                        },
                        "end": {
                          "line": 17,
                          "column": 41
                        }
                      }
                    },
                    {
                      "type": "ArrowFunctionExpression",
                      "id": null,
                      "params": [],
                      "body": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Subject",
                          "range": [
                            885,
                            892
                          ],
                          "loc": {
                            "start": {
                              "line": 17,
                              "column": 53
                            },
                            "end": {
                              "line": 17,
                              "column": 60
                            }
                          }
                        },
                        "arguments": [],
                        "range": [
                          881,
                          894
                        ],
                        "loc": {
                          "start": {
                            "line": 17,
                            "column": 49
                          },
                          "end": {
                            "line": 17,
                            "column": 62
                          }
                        }
                      },
                      "generator": false,
                      "expression": true,
                      "range": [
                        875,
                        894
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 43
                        },
                        "end": {
                          "line": 17,
                          "column": 62
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "selector",
                      "range": [
                        896,
                        904
                      ],
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 64
                        },
                        "end": {
                          "line": 17,
                          "column": 72
                        }
                      }
                    }
                  ],
                  "range": [
                    854,
                    905
                  ],
                  "loc": {
                    "start": {
                      "line": 17,
                      "column": 22
                    },
                    "end": {
                      "line": 17,
                      "column": 73
                    }
                  }
                },
                "alternate": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "multicast",
                      "range": [
                        916,
                        925
                      ],
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 8
                        },
                        "end": {
                          "line": 18,
                          "column": 17
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "call",
                      "range": [
                        926,
                        930
                      ],
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 18
                        },
                        "end": {
                          "line": 18,
                          "column": 22
                        }
                      }
                    },
                    "range": [
                      916,
                      930
                    ],
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 8
                      },
                      "end": {
                        "line": 18,
                        "column": 22
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "ThisExpression",
                      "range": [
                        931,
                        935
                      ],
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 23
                        },
                        "end": {
                          "line": 18,
                          "column": 27
                        }
                      }
                    },
                    {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Subject",
                        "range": [
                          941,
                          948
                        ],
                        "loc": {
                          "start": {
                            "line": 18,
                            "column": 33
                          },
                          "end": {
                            "line": 18,
                            "column": 40
                          }
                        }
                      },
                      "arguments": [],
                      "range": [
                        937,
                        950
                      ],
                      "loc": {
                        "start": {
                          "line": 18,
                          "column": 29
                        },
                        "end": {
                          "line": 18,
                          "column": 42
                        }
                      }
                    }
                  ],
                  "range": [
                    916,
                    951
                  ],
                  "loc": {
                    "start": {
                      "line": 18,
                      "column": 8
                    },
                    "end": {
                      "line": 18,
                      "column": 43
                    }
                  }
                },
                "range": [
                  843,
                  951
                ],
                "loc": {
                  "start": {
                    "line": 17,
                    "column": 11
                  },
                  "end": {
                    "line": 18,
                    "column": 43
                  }
                }
              },
              "range": [
                836,
                952
              ],
              "loc": {
                "start": {
                  "line": 17,
                  "column": 4
                },
                "end": {
                  "line": 18,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            830,
            954
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 34
            },
            "end": {
              "line": 19,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          803,
          954
        ],
        "loc": {
          "start": {
            "line": 16,
            "column": 7
          },
          "end": {
            "line": 19,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,\n * without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n ",
            "range": [
              79,
              795
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 15,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=publish.js.map",
            "range": [
              955,
              990
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 35
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        796,
        954
      ],
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,\n * without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n ",
          "range": [
            79,
            795
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=publish.js.map",
          "range": [
            955,
            990
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 35
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    954
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 19,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,\n * without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n ",
      "range": [
        79,
        795
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=publish.js.map",
      "range": [
        955,
        990
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 35
        }
      }
    }
  ]
}