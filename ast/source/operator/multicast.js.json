{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "MulticastObservable",
            "range": [
              9,
              28
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 28
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "MulticastObservable",
            "range": [
              9,
              28
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 28
              }
            }
          },
          "range": [
            9,
            28
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 28
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../observable/MulticastObservable",
        "raw": "'../observable/MulticastObservable'",
        "range": [
          36,
          71
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 36
          },
          "end": {
            "line": 1,
            "column": 71
          }
        }
      },
      "range": [
        0,
        72
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 72
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "ConnectableObservable",
            "range": [
              82,
              103
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 30
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "ConnectableObservable",
            "range": [
              82,
              103
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 30
              }
            }
          },
          "range": [
            82,
            103
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 30
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../observable/ConnectableObservable",
        "raw": "'../observable/ConnectableObservable'",
        "range": [
          111,
          148
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 38
          },
          "end": {
            "line": 2,
            "column": 75
          }
        }
      },
      "range": [
        73,
        149
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 76
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n ",
          "range": [
            150,
            1164
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "multicast",
          "range": [
            1181,
            1190
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 16
            },
            "end": {
              "line": 22,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "subjectOrSubjectFactory",
            "range": [
              1191,
              1214
            ],
            "loc": {
              "start": {
                "line": 22,
                "column": 26
              },
              "end": {
                "line": 22,
                "column": 49
              }
            }
          },
          {
            "type": "Identifier",
            "name": "selector",
            "range": [
              1216,
              1224
            ],
            "loc": {
              "start": {
                "line": 22,
                "column": 51
              },
              "end": {
                "line": 22,
                "column": 59
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "subjectFactory",
                    "range": [
                      1236,
                      1250
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 8
                      },
                      "end": {
                        "line": 23,
                        "column": 22
                      }
                    }
                  },
                  "init": null,
                  "range": [
                    1236,
                    1250
                  ],
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 8
                    },
                    "end": {
                      "line": 23,
                      "column": 22
                    }
                  }
                }
              ],
              "kind": "let",
              "range": [
                1232,
                1251
              ],
              "loc": {
                "start": {
                  "line": 23,
                  "column": 4
                },
                "end": {
                  "line": 23,
                  "column": 23
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "name": "subjectOrSubjectFactory",
                    "range": [
                      1267,
                      1290
                    ],
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 15
                      },
                      "end": {
                        "line": 24,
                        "column": 38
                      }
                    }
                  },
                  "prefix": true,
                  "range": [
                    1260,
                    1290
                  ],
                  "loc": {
                    "start": {
                      "line": 24,
                      "column": 8
                    },
                    "end": {
                      "line": 24,
                      "column": 38
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": "function",
                  "raw": "'function'",
                  "range": [
                    1295,
                    1305
                  ],
                  "loc": {
                    "start": {
                      "line": 24,
                      "column": 43
                    },
                    "end": {
                      "line": 24,
                      "column": 53
                    }
                  }
                },
                "range": [
                  1260,
                  1305
                ],
                "loc": {
                  "start": {
                    "line": 24,
                    "column": 8
                  },
                  "end": {
                    "line": 24,
                    "column": 53
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "subjectFactory",
                        "range": [
                          1317,
                          1331
                        ],
                        "loc": {
                          "start": {
                            "line": 25,
                            "column": 8
                          },
                          "end": {
                            "line": 25,
                            "column": 22
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "subjectOrSubjectFactory",
                        "range": [
                          1334,
                          1357
                        ],
                        "loc": {
                          "start": {
                            "line": 25,
                            "column": 25
                          },
                          "end": {
                            "line": 25,
                            "column": 48
                          }
                        }
                      },
                      "range": [
                        1317,
                        1357
                      ],
                      "loc": {
                        "start": {
                          "line": 25,
                          "column": 8
                        },
                        "end": {
                          "line": 25,
                          "column": 48
                        }
                      }
                    },
                    "range": [
                      1317,
                      1358
                    ],
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 8
                      },
                      "end": {
                        "line": 25,
                        "column": 49
                      }
                    }
                  }
                ],
                "range": [
                  1307,
                  1364
                ],
                "loc": {
                  "start": {
                    "line": 24,
                    "column": 55
                  },
                  "end": {
                    "line": 26,
                    "column": 5
                  }
                }
              },
              "alternate": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "subjectFactory",
                        "range": [
                          1384,
                          1398
                        ],
                        "loc": {
                          "start": {
                            "line": 28,
                            "column": 8
                          },
                          "end": {
                            "line": 28,
                            "column": 22
                          }
                        }
                      },
                      "right": {
                        "type": "FunctionExpression",
                        "id": {
                          "type": "Identifier",
                          "name": "subjectFactory",
                          "range": [
                            1410,
                            1424
                          ],
                          "loc": {
                            "start": {
                              "line": 28,
                              "column": 34
                            },
                            "end": {
                              "line": 28,
                              "column": 48
                            }
                          }
                        },
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "subjectOrSubjectFactory",
                                "range": [
                                  1448,
                                  1471
                                ],
                                "loc": {
                                  "start": {
                                    "line": 29,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 29,
                                    "column": 42
                                  }
                                }
                              },
                              "range": [
                                1441,
                                1472
                              ],
                              "loc": {
                                "start": {
                                  "line": 29,
                                  "column": 12
                                },
                                "end": {
                                  "line": 29,
                                  "column": 43
                                }
                              }
                            }
                          ],
                          "range": [
                            1427,
                            1482
                          ],
                          "loc": {
                            "start": {
                              "line": 28,
                              "column": 51
                            },
                            "end": {
                              "line": 30,
                              "column": 9
                            }
                          }
                        },
                        "generator": false,
                        "expression": false,
                        "range": [
                          1401,
                          1482
                        ],
                        "loc": {
                          "start": {
                            "line": 28,
                            "column": 25
                          },
                          "end": {
                            "line": 30,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1384,
                        1482
                      ],
                      "loc": {
                        "start": {
                          "line": 28,
                          "column": 8
                        },
                        "end": {
                          "line": 30,
                          "column": 9
                        }
                      }
                    },
                    "range": [
                      1384,
                      1483
                    ],
                    "loc": {
                      "start": {
                        "line": 28,
                        "column": 8
                      },
                      "end": {
                        "line": 30,
                        "column": 10
                      }
                    }
                  }
                ],
                "range": [
                  1374,
                  1489
                ],
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 9
                  },
                  "end": {
                    "line": 31,
                    "column": 5
                  }
                }
              },
              "range": [
                1256,
                1489
              ],
              "loc": {
                "start": {
                  "line": 24,
                  "column": 4
                },
                "end": {
                  "line": 31,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "Identifier",
                    "name": "selector",
                    "range": [
                      1502,
                      1510
                    ],
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 12
                      },
                      "end": {
                        "line": 32,
                        "column": 20
                      }
                    }
                  },
                  "prefix": true,
                  "range": [
                    1501,
                    1510
                  ],
                  "loc": {
                    "start": {
                      "line": 32,
                      "column": 11
                    },
                    "end": {
                      "line": 32,
                      "column": 20
                    }
                  }
                },
                "consequent": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "ConnectableObservable",
                    "range": [
                      1525,
                      1546
                    ],
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 12
                      },
                      "end": {
                        "line": 33,
                        "column": 33
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "ThisExpression",
                      "range": [
                        1547,
                        1551
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 34
                        },
                        "end": {
                          "line": 33,
                          "column": 38
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "subjectFactory",
                      "range": [
                        1553,
                        1567
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 40
                        },
                        "end": {
                          "line": 33,
                          "column": 54
                        }
                      }
                    }
                  ],
                  "range": [
                    1521,
                    1568
                  ],
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 8
                    },
                    "end": {
                      "line": 33,
                      "column": 55
                    }
                  }
                },
                "alternate": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "MulticastObservable",
                    "range": [
                      1583,
                      1602
                    ],
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 12
                      },
                      "end": {
                        "line": 34,
                        "column": 31
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "ThisExpression",
                      "range": [
                        1603,
                        1607
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 32
                        },
                        "end": {
                          "line": 34,
                          "column": 36
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "subjectFactory",
                      "range": [
                        1609,
                        1623
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 38
                        },
                        "end": {
                          "line": 34,
                          "column": 52
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "selector",
                      "range": [
                        1625,
                        1633
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 54
                        },
                        "end": {
                          "line": 34,
                          "column": 62
                        }
                      }
                    }
                  ],
                  "range": [
                    1579,
                    1634
                  ],
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 8
                    },
                    "end": {
                      "line": 34,
                      "column": 63
                    }
                  }
                },
                "range": [
                  1501,
                  1634
                ],
                "loc": {
                  "start": {
                    "line": 32,
                    "column": 11
                  },
                  "end": {
                    "line": 34,
                    "column": 63
                  }
                }
              },
              "range": [
                1494,
                1635
              ],
              "loc": {
                "start": {
                  "line": 32,
                  "column": 4
                },
                "end": {
                  "line": 34,
                  "column": 64
                }
              }
            }
          ],
          "range": [
            1226,
            1637
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 61
            },
            "end": {
              "line": 35,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1172,
          1637
        ],
        "loc": {
          "start": {
            "line": 22,
            "column": 7
          },
          "end": {
            "line": 35,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n ",
            "range": [
              150,
              1164
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=multicast.js.map",
            "range": [
              1638,
              1675
            ],
            "loc": {
              "start": {
                "line": 36,
                "column": 0
              },
              "end": {
                "line": 36,
                "column": 37
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1165,
        1637
      ],
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n ",
          "range": [
            150,
            1164
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=multicast.js.map",
          "range": [
            1638,
            1675
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 37
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1637
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 35,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n ",
      "range": [
        150,
        1164
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=multicast.js.map",
      "range": [
        1638,
        1675
      ],
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 37
        }
      }
    }
  ]
}