{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "distinctUntilChanged",
            "range": [
              9,
              29
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 29
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "distinctUntilChanged",
            "range": [
              9,
              29
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 29
              }
            }
          },
          "range": [
            9,
            29
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 29
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./distinctUntilChanged",
        "raw": "'./distinctUntilChanged'",
        "range": [
          37,
          61
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 37
          },
          "end": {
            "line": 1,
            "column": 61
          }
        }
      },
      "range": [
        0,
        62
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 62
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": " tslint:disable:max-line-length ",
          "range": [
            63,
            99
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 2,
              "column": 36
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n ",
          "range": [
            100,
            2086
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 59,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "distinctUntilKeyChanged",
          "range": [
            2103,
            2126
          ],
          "loc": {
            "start": {
              "line": 60,
              "column": 16
            },
            "end": {
              "line": 60,
              "column": 39
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "key",
            "range": [
              2127,
              2130
            ],
            "loc": {
              "start": {
                "line": 60,
                "column": 40
              },
              "end": {
                "line": 60,
                "column": 43
              }
            }
          },
          {
            "type": "Identifier",
            "name": "compare",
            "range": [
              2132,
              2139
            ],
            "loc": {
              "start": {
                "line": 60,
                "column": 45
              },
              "end": {
                "line": 60,
                "column": 52
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "distinctUntilChanged",
                    "range": [
                      2154,
                      2174
                    ],
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 11
                      },
                      "end": {
                        "line": 61,
                        "column": 31
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "call",
                    "range": [
                      2175,
                      2179
                    ],
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 32
                      },
                      "end": {
                        "line": 61,
                        "column": 36
                      }
                    }
                  },
                  "range": [
                    2154,
                    2179
                  ],
                  "loc": {
                    "start": {
                      "line": 61,
                      "column": 11
                    },
                    "end": {
                      "line": 61,
                      "column": 36
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ThisExpression",
                    "range": [
                      2180,
                      2184
                    ],
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 37
                      },
                      "end": {
                        "line": 61,
                        "column": 41
                      }
                    }
                  },
                  {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "range": [
                          2196,
                          2197
                        ],
                        "loc": {
                          "start": {
                            "line": 61,
                            "column": 53
                          },
                          "end": {
                            "line": 61,
                            "column": 54
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "y",
                        "range": [
                          2199,
                          2200
                        ],
                        "loc": {
                          "start": {
                            "line": 61,
                            "column": 56
                          },
                          "end": {
                            "line": 61,
                            "column": 57
                          }
                        }
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "Identifier",
                            "name": "compare",
                            "range": [
                              2216,
                              2223
                            ],
                            "loc": {
                              "start": {
                                "line": 62,
                                "column": 12
                              },
                              "end": {
                                "line": 62,
                                "column": 19
                              }
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "compare",
                                    "range": [
                                      2246,
                                      2253
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 63,
                                        "column": 19
                                      },
                                      "end": {
                                        "line": 63,
                                        "column": 26
                                      }
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "x",
                                        "range": [
                                          2254,
                                          2255
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 63,
                                            "column": 27
                                          },
                                          "end": {
                                            "line": 63,
                                            "column": 28
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "key",
                                        "range": [
                                          2256,
                                          2259
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 63,
                                            "column": 29
                                          },
                                          "end": {
                                            "line": 63,
                                            "column": 32
                                          }
                                        }
                                      },
                                      "range": [
                                        2254,
                                        2260
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 63,
                                          "column": 27
                                        },
                                        "end": {
                                          "line": 63,
                                          "column": 33
                                        }
                                      }
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "y",
                                        "range": [
                                          2262,
                                          2263
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 63,
                                            "column": 35
                                          },
                                          "end": {
                                            "line": 63,
                                            "column": 36
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "key",
                                        "range": [
                                          2264,
                                          2267
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 63,
                                            "column": 37
                                          },
                                          "end": {
                                            "line": 63,
                                            "column": 40
                                          }
                                        }
                                      },
                                      "range": [
                                        2262,
                                        2268
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 63,
                                          "column": 35
                                        },
                                        "end": {
                                          "line": 63,
                                          "column": 41
                                        }
                                      }
                                    }
                                  ],
                                  "range": [
                                    2246,
                                    2269
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 63,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 63,
                                      "column": 42
                                    }
                                  }
                                },
                                "range": [
                                  2239,
                                  2270
                                ],
                                "loc": {
                                  "start": {
                                    "line": 63,
                                    "column": 12
                                  },
                                  "end": {
                                    "line": 63,
                                    "column": 43
                                  }
                                }
                              }
                            ],
                            "range": [
                              2225,
                              2280
                            ],
                            "loc": {
                              "start": {
                                "line": 62,
                                "column": 21
                              },
                              "end": {
                                "line": 64,
                                "column": 9
                              }
                            }
                          },
                          "alternate": null,
                          "range": [
                            2212,
                            2280
                          ],
                          "loc": {
                            "start": {
                              "line": 62,
                              "column": 8
                            },
                            "end": {
                              "line": 64,
                              "column": 9
                            }
                          }
                        },
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "x",
                                "range": [
                                  2296,
                                  2297
                                ],
                                "loc": {
                                  "start": {
                                    "line": 65,
                                    "column": 15
                                  },
                                  "end": {
                                    "line": 65,
                                    "column": 16
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  2298,
                                  2301
                                ],
                                "loc": {
                                  "start": {
                                    "line": 65,
                                    "column": 17
                                  },
                                  "end": {
                                    "line": 65,
                                    "column": 20
                                  }
                                }
                              },
                              "range": [
                                2296,
                                2302
                              ],
                              "loc": {
                                "start": {
                                  "line": 65,
                                  "column": 15
                                },
                                "end": {
                                  "line": 65,
                                  "column": 21
                                }
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "y",
                                "range": [
                                  2307,
                                  2308
                                ],
                                "loc": {
                                  "start": {
                                    "line": 65,
                                    "column": 26
                                  },
                                  "end": {
                                    "line": 65,
                                    "column": 27
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  2309,
                                  2312
                                ],
                                "loc": {
                                  "start": {
                                    "line": 65,
                                    "column": 28
                                  },
                                  "end": {
                                    "line": 65,
                                    "column": 31
                                  }
                                }
                              },
                              "range": [
                                2307,
                                2313
                              ],
                              "loc": {
                                "start": {
                                  "line": 65,
                                  "column": 26
                                },
                                "end": {
                                  "line": 65,
                                  "column": 32
                                }
                              }
                            },
                            "range": [
                              2296,
                              2313
                            ],
                            "loc": {
                              "start": {
                                "line": 65,
                                "column": 15
                              },
                              "end": {
                                "line": 65,
                                "column": 32
                              }
                            }
                          },
                          "range": [
                            2289,
                            2314
                          ],
                          "loc": {
                            "start": {
                              "line": 65,
                              "column": 8
                            },
                            "end": {
                              "line": 65,
                              "column": 33
                            }
                          }
                        }
                      ],
                      "range": [
                        2202,
                        2320
                      ],
                      "loc": {
                        "start": {
                          "line": 61,
                          "column": 59
                        },
                        "end": {
                          "line": 66,
                          "column": 5
                        }
                      }
                    },
                    "generator": false,
                    "expression": false,
                    "range": [
                      2186,
                      2320
                    ],
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 43
                      },
                      "end": {
                        "line": 66,
                        "column": 5
                      }
                    }
                  }
                ],
                "range": [
                  2154,
                  2321
                ],
                "loc": {
                  "start": {
                    "line": 61,
                    "column": 11
                  },
                  "end": {
                    "line": 66,
                    "column": 6
                  }
                }
              },
              "range": [
                2147,
                2322
              ],
              "loc": {
                "start": {
                  "line": 61,
                  "column": 4
                },
                "end": {
                  "line": 66,
                  "column": 7
                }
              }
            }
          ],
          "range": [
            2141,
            2324
          ],
          "loc": {
            "start": {
              "line": 60,
              "column": 54
            },
            "end": {
              "line": 67,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2094,
          2324
        ],
        "loc": {
          "start": {
            "line": 60,
            "column": 7
          },
          "end": {
            "line": 67,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": " tslint:disable:max-line-length ",
            "range": [
              63,
              99
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 2,
                "column": 36
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n ",
            "range": [
              100,
              2086
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=distinctUntilKeyChanged.js.map",
            "range": [
              2325,
              2376
            ],
            "loc": {
              "start": {
                "line": 68,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 51
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2087,
        2324
      ],
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 67,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": " tslint:disable:max-line-length ",
          "range": [
            63,
            99
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 2,
              "column": 36
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n ",
          "range": [
            100,
            2086
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 59,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=distinctUntilKeyChanged.js.map",
          "range": [
            2325,
            2376
          ],
          "loc": {
            "start": {
              "line": 68,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 51
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    2324
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 67,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": " tslint:disable:max-line-length ",
      "range": [
        63,
        99
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n ",
      "range": [
        100,
        2086
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=distinctUntilKeyChanged.js.map",
      "range": [
        2325,
        2376
      ],
      "loc": {
        "start": {
          "line": 68,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 51
        }
      }
    }
  ]
}